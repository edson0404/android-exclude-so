buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:3.0.3'
    }
}
apply plugin: 'com.jfrog.bintray'


// 
// read bintray user and api key form gitignored local.properties file
// 
def FILE_LOCAL_PROPERTIES = "local.properties"
Properties localProp = new Properties()
def getFileInDir = { dir -> 
    File ret = new File("$dir$File.separator$FILE_LOCAL_PROPERTIES")
    ret?.exists() ? ret : null
}

def rootLocalPropFile = getFileInDir(project.rootDir)
if (rootLocalPropFile) {
    localProp.load(rootLocalPropFile.newDataInputStream())
}

def localPropFile = getFileInDir(project.projectDir)
if (localPropFile) {
    Properties tmpProp = new Properties()
    tmpProp.load(localPropFile.newDataInputStream())
    localProp.putAll(tmpProp)
}
    
def propLocal = { localProp?.get it }

apply plugin: 'groovy'
apply plugin: 'nebula.provided-base'
apply plugin: 'maven'
apply plugin: 'maven-publish'

def VERSION = '1.1'
def GROUP = 'com.jween.gradle'
def ARTIFACT_ID = 'android-soexcluder'
group = GROUP
version = VERSION

def u = "${propLocal 'bintray_user'}"
def k = "${propLocal 'bintray_api_key'}"

bintray {
    user = u
    key = k
    publications = ['SePublication']
     
    pkg {
        repo = 'maven'
        name = ARTIFACT_ID
        // userOrg = u  
        licenses = ['Copyfree'] // fuck no, I need help to change this license to BEER-WARE
        websiteUrl = 'https://github.com/Jween/android-soexcluder'
        vcsUrl = 'https://github.com/Jween/android-soexcluder.git'
        
        version {
			name = VERSION
			desc = 'This plugin will help you exclude so files by flavor or buildType'
            // released  = new Date() // bug here
			vcsTag = VERSION
			attributes = ['gradle-plugin': 'com.jween:com.jween.gradle:android-soexcluder']
		}
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

publishing {
	publications {
		SePublication(MavenPublication) {
            from components.java
            artifact sourceJar {
                classifier "sources"
            }
			groupId GROUP
    		artifactId ARTIFACT_ID
    		version version
		}
	}
}


dependencies {
    implementation gradleApi()
    implementation localGroovy()
    
    provided 'com.android.tools.build:gradle:1.3.1'
}

repositories {
    jcenter()
}

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6